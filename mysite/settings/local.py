"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

from django.urls import reverse_lazy
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.

# アプリフォルダ(PycharmProjects\day_repo)のパス
BASE_DIR = Path(__file__).resolve().parent.parent.parent
# プロジェクトフォルダ(PycharmProjects)のパス
PARENT_DIR = BASE_DIR.parent

# 環境変数定義ファイル(.env)の読み込みと環境変数への設定
env_path = BASE_DIR / "auth/.env"
load_dotenv(env_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# シークレットキーを環境変数から設定
SECRET_KEY = os.environ.get("secret_key")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    # メッセージフレームワークで必要な設定
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # ユーザ認証用ライブラリ
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # 'day_repo'アプリをDjangoに追加
    'day_repo',
    # 'accounts'アプリをDjangoに追加
    'accounts',
    "crispy_forms",
    'bootstrap4',
    'bootstrap_datepicker_plus',
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # メッセージフレームワークで必要な設定
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # メッセージフレームワークで必要な設定
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                # メッセージフレームワークで必要な設定
                'django.contrib.messages.context_processors.messages',
                # ユーザ認証用ライブラリ
                'django.template.context_processors.request',
            ],
            'builtins': [
                'bootstrap4.templatetags.bootstrap4',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# 各種接続先情報を環境変数から設定
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get("db_name"),
        'USER': os.environ.get("db_user"),
        'PASSWORD': os.environ.get("db_password"),
        'HOST': 'localhost',
        'PORT': '5432',
        'OPTIONS': {
            'options': '-c search_path=' + os.environ.get("db_schema")
        },
        'TEST': {
            'NAME': 'test_db',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static_local"]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media_local"

AUTH_USER_MODEL = 'accounts.User'

# ユーザ認証用ライブラリ
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1

# 認証時にユーザーネームは使用しない
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USERNAME_REQUIRED = False

# 認証時にメールアドレスを使用する
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True

# ログイン後のリダイレクト先
LOGIN_REDIRECT_URL = reverse_lazy('day_repo_list')

# ログアウト後のリダイレクト先
ACCOUNT_LOGOUT_REDIRECT_URL = reverse_lazy("account_login")

# メールアドレス確認済みの会員のみ利用可
ACCOUNT_EMAIL_VERIFICATION = "mandatory"

# ログアウト時に確認を求めない
ACCOUNT_LOGOUT_ON_GET = True

# Emailをターミナル表示
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

CRISPY_TEMPLATE_PACK = 'bootstrap4'

# 自作自動遷移用クラスの設定
ACCOUNT_ADAPTER = "accounts.adapter.MyDayRepoAdapter"

BOOTSTRAP4 = {
    'include_jquery': True,
}
